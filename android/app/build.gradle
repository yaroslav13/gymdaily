plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def getKeystoreProperty(propertyName) {
    def keystoreFile = rootProject.file("key.properties")

    if (keystoreFile.exists()) {
        def properties = new Properties()
        properties.load(new FileInputStream(keystoreFile))

        def value = properties.getProperty(propertyName) ?: System.getenv(propertyName)
        if (value != null) {
            return value
        }
    } else {
        def envValue = System.getenv(propertyName)
        if (envValue != null) {
            return envValue
        }
    }

    throw new GradleException("ERROR: Keystore property '$propertyName' not found.")
}

android {
    namespace = "com.daily.gym.gym_daily"
    compileSdk = 35
    ndkVersion = "27.0.12077973" //firebase ndk requirements

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.daily.gym.gym_daily"
        minSdk = 23 //firebase min requirements
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias = getKeystoreProperty("keyAlias")
            keyPassword = getKeystoreProperty("keyPassword")
            storeFile = file(getKeystoreProperty("storeFile"))
            storePassword = getKeystoreProperty("storePassword")
        }
        debug {
            keyAlias = "gym-pilot-debug"
            keyPassword = "gym-pilot-debug"
            storeFile = file("../keystore/debug.keystore")
            storePassword = "gym-pilot-debug"
        }
    }

    flavorDimensions = ["default"]

    productFlavors {
        prod {
            dimension = "default"
        }
        dev {
            dimension = "default"
            applicationIdSuffix = ".dev"
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
            minifyEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
